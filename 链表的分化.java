/*
对于一个链表，我们需要用一个特定阈值完成对它的分化，
使得小于等于这个值的结点移到前面，大于该值的结点在后面，同时保证两类结点内部的位置关系不变。
给定一个链表的头结点head，同时给定阈值val，请返回一个链表，使小于等于它的结点在前，大于等于它的在后，保证结点值不重复。
测试样例：
{1,4,2,5},3
{1,2,4,5}
*/
提交时间：2016-12-26 语言：Java 运行时间： 295 ms 占用内存：4012K 状态：答案正确
import java.util.*;
 
/*
public class ListNode {
    int val;
    ListNode next = null;
 
    ListNode(int val) {
        this.val = val;
    }
}*/
public class Divide {
    public ListNode listDivide(ListNode head, int val) {
    ListNode sh = null; // small head
        ListNode st = null; // small tail
        ListNode bh = null; // big head
        ListNode bt = null; // big tail
        ListNode next = null; // save next node
        while (head != null) {
            next = head.next;
            head.next = null;
            if (head.val <= val) {
                if (sh == null) {
                    sh = head;
                    st = head;
                } else {
                    st.next = head;
                    st = head;
                }
            } else {
                if (bh == null) {
                    bh = head;
                    bt = head;
                } else {
                    bt.next = head;
                    bt = head;
                }
            }
            head = next;
        }
        if (st != null) {
            st.next = bh;
        }
        return sh != null ? sh : bh;
    }
}